{
    "version": "https://jsonfeed.org/version/1",
    "title": "Mamun Blog",
    "description": " ",
    "home_page_url": "https://mamun.github.io",
    "feed_url": "https://mamun.github.io/feed.json",
    "author" : {
    	"name": "Abdullah Mamun",
    	"avatar": "https://mamun.github.io/img/main/avatar.png"
    },
    "items": [
        {
            "id": "https://mamun.github.io/blog/2017/clj-spec-java.html",
            
           
            "url": "https://mamun.github.io/blog/2017/clj-spec-java.html",
            "date_published": "2017-08-02T00:00:00+02:00",
            "date_modified": "2017-06-01T00:00:00+02:00",
            "author" : "Abdullah Mamun",
            "tags": [ "clojure" ],
            "content_html" : "\n<p> Define data model and service <\/p>\n<pre class=\"prettyprint\">\n<code>\npublic class Person{\n private String fname;\n private String lname;\n private Date birthDate;\n private Address address;\n //setter and getter method here..\n}\n\npublic class Address{\n private String roadName;\n private String houseNo;\n private String postCode;\n private String city;\n private String country;\n //setter and getter mehod here\n}\n\npublic class Score{\n private Score value;\n //setter and getter method here\n}\n\npublic class ScoreService {\n public Score getScore(Person person){\n //do business logic\n Score score = new Score();\n score.setScoreType(Score.ScoreType.HIGH);\n return score;\n }\n}\n<\/code>\n<\/pre>\n\n<p>Define spec for data model<\/p>\n<pre class=\"prettyprint\">\n<code>\n(s/def :person/fname string?)\n(s/def :person/lname string?)\n(s/def :person/birthDate inst?)\n\n(s/def :address/roadName string?)\n(s/def :address/houseNo string?)\n(s/def :address/postCode int?)\n(s/def :address/city string?)\n(s/def :address/country string?)\n\n(s/def ::address (s/keys :req-un [:address/roadName\n :address/houseNo\n :address/postCode\n :address/city\n :address/country]))\n\n(s/def ::person (s/keys :req-un [:person/fname\n :person/lname\n :person/birthDate]\n :opt-un [::address]))\n\n\n(s/def :score/value int?)\n(s/def ::score (s/keys :req-un [:score/value]))\n<\/code>\n<\/pre>\n\n<p>Generate Sample data<\/p>\n<pre class=\"prettyprint\">\n<code>\n(g/sample (s/gen ::person) 2)\n;;Sample data\n({:fname \"\", :lname \"\", :birthDate #inst\"1969-12-31T23:59:59.999-00:00\"}\n {:fname \"k\",\n :lname \"\",\n :birthDate #inst\"1970-01-01T00:00:00.000-00:00\",\n :address {:roadName \"O\", :houseNo \"R\", :postCode -1, :city \"0\", :country \"4\"}})\n<\/code>\n<\/pre>\n\n\n<p>Write clojure test case to call java API <\/p>\n<pre class=\"prettyprint\">\n<code>\n(def gson (Gson.))\n\n(defn from-json [v t]\n (.fromJson gson v t))\n\n(defn to-jtype [t v]\n (-> v\n (cheshire/generate-string)\n (from-json t)))\n\n(defn get-score [v]\n (->> (u/to-jtype Person v)\n (.getScore (ScoreService.))\n (u/from-jtype)))\n\n(s/fdef get-score\n :args (s/cat :v ::person)\n :ret ::score)\n\n(ct/defspec get-score-test\n 10\n (prop/for-all [v (s/gen ::person)]\n (let [w (get-score v)]\n (not= nil? w))))\n<\/code>\n<\/pre>\n\n<p>Run clojure test from command line <\/p>\n<pre class=\"prettyprint\">\n<code>\nmvn clojure:test\n\n[INFO] --- clojure-maven-plugin:1.8.1:test (default-cli) @ sdemo ---\n\nTesting dev.lab.sdemo.util\n\nRan 0 tests containing 0 assertions.\n0 failures, 0 errors.\n\nTesting dev.lab.sdemo.score-service-test\n{:result true, :num-tests 10, :seed 1501674877185, :test-var \"get-score-test\"}\n\nRan 1 tests containing 1 assertions.\n0 failures, 0 errors.\nTests run: , Assertions: 1, Failures: 0, Errors: 0\n<\/code>\n<\/pre>\n<p><a href=\"https://github.com/Mamun/java-spec\">Github link<\/a><\/p>\n\n"
        }, 
        {
            "id": "https://mamun.github.io/blog/2017/hello-clj.html",
            
           
            "url": "https://mamun.github.io/blog/2017/hello-clj.html",
            "date_published": "2017-08-02T00:00:00+02:00",
            "date_modified": "2017-06-01T00:00:00+02:00",
            "author" : "Abdullah Mamun",
            "tags": [ "clojure" ],
            "content_html" : "\n\n<p>Hello world<\/p>\n\n<pre class=\"prettyprint\">\n<code>\n\t(println \"Hello World \")\n\n<\/code>\n<\/pre>\n\n"
        }, 
        {
            "id": "https://mamun.github.io/blog/2013/fourth-post.html",
            
           
            "url": "https://mamun.github.io/blog/2013/fourth-post.html",
            "date_published": "2013-10-17T00:00:00+02:00",
            "date_modified": "2017-06-01T00:00:00+02:00",
            "author" : "Jonathan Bullock",
            "tags": [ "blog",   "asciidoc" ],
            "content_html" : "<div class=\"paragraph\">\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vel diam purus. Curabitur ut nisi lacus.<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"http://example.org\" class=\"bare\">http://example.org<\/a><\/p>\n<\/li>\n<li>\n<p><a href=\"http://example.org\">Example.org<\/a><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>Nam id nisl quam. Donec a lorem sit amet libero pretium vulputate vel ut purus. Suspendisse leo arcu,\nmattis et imperdiet luctus, pulvinar vitae mi. Quisque fermentum sollicitudin feugiat. Mauris nec leo\nligula. Vestibulum tristique odio ut risus ultricies a hendrerit quam iaculis. Duis tempor elit sit amet\nligula vehicula et iaculis sem placerat. Fusce dictum, metus at volutpat lacinia, elit massa auctor risus,\nid auctor arcu enim eu augue. Donec ultrices turpis in mi imperdiet ac venenatis sapien sodales. In\nconsequat imperdiet nunc quis bibendum. Nulla semper, erat quis ornare tristique, lectus massa posuere\nlibero, ut vehicula lectus nunc ut lorem. Aliquam erat volutpat.<\/p>\n<\/div>"
        }, 
        {
            "id": "https://mamun.github.io/blog/2013/third-post.html",
            
            "banner_image": "https://mamun.github.io/img/blog/sample-image.jpg", 
            "url": "https://mamun.github.io/blog/2013/third-post.html",
            "date_published": "2013-09-26T00:00:00+02:00",
            "date_modified": "2017-06-01T00:00:00+02:00",
            "author" : "Abdullah Mamun",
            "tags": [ "blog",   "asciidoc" ],
            "content_html" : "<div class=\"paragraph\">\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vel diam purus. Curabitur ut nisi lacus.<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p><a href=\"http://example.org\" class=\"bare\">http://example.org<\/a><\/p>\n<\/li>\n<li>\n<p><a href=\"http://example.org\">Example.org<\/a><\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>Nam id nisl quam. Donec a lorem sit amet libero pretium vulputate vel ut purus. Suspendisse leo arcu,\nmattis et imperdiet luctus, pulvinar vitae mi. Quisque fermentum sollicitudin feugiat. Mauris nec leo\nligula. Vestibulum tristique odio ut risus ultricies a hendrerit quam iaculis. Duis tempor elit sit amet\nligula vehicula et iaculis sem placerat. Fusce dictum, metus at volutpat lacinia, elit massa auctor risus,\nid auctor arcu enim eu augue. Donec ultrices turpis in mi imperdiet ac venenatis sapien sodales. In\nconsequat imperdiet nunc quis bibendum. Nulla semper, erat quis ornare tristique, lectus massa posuere\nlibero, ut vehicula lectus nunc ut lorem. Aliquam erat volutpat.<\/p>\n<\/div>"
        }, 
        {
            "id": "https://mamun.github.io/blog/2013/second-post.html",
            
           
            "url": "https://mamun.github.io/blog/2013/second-post.html",
            "date_published": "2013-08-25T00:00:00+02:00",
            "date_modified": "2017-06-01T00:00:00+02:00",
            "author" : "Manik Magar",
            "tags": [ "blog" ],
            "content_html" : "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vel diam purus. Curabitur ut nisi lacus.<\/p>\n<ul>\n <li><a href=\"http://example.org\">http://example.org<\/a><\/li>\n <li><a href=\"http://example.org\">Example.org<\/a><\/li>\n<\/ul>\n<p>Nam id nisl quam. Donec a lorem sit amet libero pretium vulputate vel ut purus. Suspendisse leo arcu,<br/>mattis et imperdiet luctus, pulvinar vitae mi. Quisque fermentum sollicitudin feugiat. Mauris nec leo<br/>ligula. Vestibulum tristique odio ut risus ultricies a hendrerit quam iaculis. Duis tempor elit sit amet<br/>ligula vehicula et iaculis sem placerat. Fusce dictum, metus at volutpat lacinia, elit massa auctor risus,<br/>id auctor arcu enim eu augue. Donec ultrices turpis in mi imperdiet ac venenatis sapien sodales. In<br/>consequat imperdiet nunc quis bibendum. Nulla semper, erat quis ornare tristique, lectus massa posuere<br/>libero, ut vehicula lectus nunc ut lorem. Aliquam erat volutpat.<\/p>"
        }, 
        {
            "id": "https://mamun.github.io/blog/2013/first-post.html",
            
           
            "url": "https://mamun.github.io/blog/2013/first-post.html",
            "date_published": "2013-07-24T00:00:00+02:00",
            "date_modified": "2017-06-01T00:00:00+02:00",
            "author" : "Manik Magar",
            "tags": [ "blog" ],
            "content_html" : "\n<img src=\"img/blog/sample-image.jpg\"/>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque vel diam purus. Curabitur ut nisi lacus.<\/p>\n\n<ul>\n<li><a href=\"http://example.org\">http://example.org<\/a><\/li>\n<li><a href=\"http://example.org\">Example.org<\/a><\/li>\n<\/ul>\n\n<p>Nam id nisl quam. Donec a lorem sit amet libero pretium vulputate vel ut purus. Suspendisse leo arcu, \nmattis et imperdiet luctus, pulvinar vitae mi. Quisque fermentum sollicitudin feugiat. Mauris nec leo \nligula. Vestibulum tristique odio ut risus ultricies a hendrerit quam iaculis. Duis tempor elit sit amet \nligula vehicula et iaculis sem placerat. Fusce dictum, metus at volutpat lacinia, elit massa auctor risus, \nid auctor arcu enim eu augue. Donec ultrices turpis in mi imperdiet ac venenatis sapien sodales.<\/p> \n\n<pre class=\"prettyprint\">\n<code>\npackage org.jbake;\n\npublic class Oven {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.print(\"Baking!\");\n }\n}\n<\/code>\n<\/pre>\n\n<p>In consequat imperdiet nunc quis bibendum. Nulla semper, erat quis ornare tristique, lectus massa posuere \nlibero, ut vehicula lectus nunc ut lorem. Aliquam erat volutpat.<\/p>\n"
        }
    ]
}